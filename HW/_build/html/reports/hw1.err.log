Traceback (most recent call last):
  File "C:\Users\Jared\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Jared\anaconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jared\anaconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jared\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jared\anaconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Jared\anaconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Jared\anaconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.graph_objects as go
from plotly.subplots import make_subplots

app = dash.Dash(__name__)
app.layout = html.Div([
    html.H1('Brent Crude/Henry Hub NG Prices and Log Returns', style={'textAlign': 'center'}),
    html.Label('Select Variable'),
    dcc.Dropdown(
        id='series-dropdown',
        options=[
            {'label': 'Crude Price', 'value': 'crude_price'},
            {'label': 'NG Price', 'value': 'ng_price'},
            {'label': 'Crude Log Returns', 'value': 'crude_log_returns'},
            {'label': 'NG Log Returns', 'value': 'ng_log_returns'}
        ],
        value=['crude_price'], 
        clearable=False,
        multi=True 
    ),
    dcc.Graph(id='price-graph')
])
@app.callback(
    Output('price-graph', 'figure'),
    Input('series-dropdown', 'value')
)
def update_graph(selected_series):
    fig = make_subplots(rows=len(selected_series), cols=1, shared_xaxes=True, vertical_spacing=0.1)

    for i, series in enumerate(selected_series):
        fig.add_trace(go.Scatter(x=prices['Date'], y=prices[series], mode='lines', name=series), row=i+1, col=1)
        fig.update_yaxes(title_text=series, row=i+1, col=1)

    fig.update_xaxes(title_text='Date', row=len(selected_series), col=1)

    fig.update_layout(height=300 * len(selected_series), showlegend=False)
    return fig


app.run(host='0.0.0.0', port=8051)


------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mOSError[0m                                   Traceback (most recent call last)
File [1;32m~\anaconda3\Lib\site-packages\urllib3\connection.py:174[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    173[0m [38;5;28;01mtry[39;00m:
[1;32m--> 174[0m     conn [38;5;241m=[39m connection[38;5;241m.[39mcreate_connection(
[0;32m    175[0m         ([38;5;28mself[39m[38;5;241m.[39m_dns_host, [38;5;28mself[39m[38;5;241m.[39mport), [38;5;28mself[39m[38;5;241m.[39mtimeout, [38;5;241m*[39m[38;5;241m*[39mextra_kw
[0;32m    176[0m     )
[0;32m    178[0m [38;5;28;01mexcept[39;00m SocketTimeout:

File [1;32m~\anaconda3\Lib\site-packages\urllib3\util\connection.py:95[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, socket_options)[0m
[0;32m     94[0m [38;5;28;01mif[39;00m err [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m---> 95[0m     [38;5;28;01mraise[39;00m err
[0;32m     97[0m [38;5;28;01mraise[39;00m socket[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mgetaddrinfo returns an empty list[39m[38;5;124m"[39m)

File [1;32m~\anaconda3\Lib\site-packages\urllib3\util\connection.py:85[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, socket_options)[0m
[0;32m     84[0m     sock[38;5;241m.[39mbind(source_address)
[1;32m---> 85[0m sock[38;5;241m.[39mconnect(sa)
[0;32m     86[0m [38;5;28;01mreturn[39;00m sock

[1;31mOSError[0m: [WinError 10049] The requested address is not valid in its context

During handling of the above exception, another exception occurred:

[1;31mNewConnectionError[0m                        Traceback (most recent call last)
File [1;32m~\anaconda3\Lib\site-packages\urllib3\connectionpool.py:715[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    714[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[1;32m--> 715[0m httplib_response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_make_request(
[0;32m    716[0m     conn,
[0;32m    717[0m     method,
[0;32m    718[0m     url,
[0;32m    719[0m     timeout[38;5;241m=[39mtimeout_obj,
[0;32m    720[0m     body[38;5;241m=[39mbody,
[0;32m    721[0m     headers[38;5;241m=[39mheaders,
[0;32m    722[0m     chunked[38;5;241m=[39mchunked,
[0;32m    723[0m )
[0;32m    725[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[0;32m    726[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[0;32m    727[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[0;32m    728[0m [38;5;66;03m# mess.[39;00m

File [1;32m~\anaconda3\Lib\site-packages\urllib3\connectionpool.py:416[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[0;32m    415[0m     [38;5;28;01melse[39;00m:
[1;32m--> 416[0m         conn[38;5;241m.[39mrequest(method, url, [38;5;241m*[39m[38;5;241m*[39mhttplib_request_kw)
[0;32m    418[0m [38;5;66;03m# We are swallowing BrokenPipeError (errno.EPIPE) since the server is[39;00m
[0;32m    419[0m [38;5;66;03m# legitimately able to close the connection after sending a valid response.[39;00m
[0;32m    420[0m [38;5;66;03m# With this behaviour, the received response is still readable.[39;00m

File [1;32m~\anaconda3\Lib\site-packages\urllib3\connection.py:244[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers)[0m
[0;32m    243[0m     headers[[38;5;124m"[39m[38;5;124mUser-Agent[39m[38;5;124m"[39m] [38;5;241m=[39m _get_default_user_agent()
[1;32m--> 244[0m [38;5;28msuper[39m(HTTPConnection, [38;5;28mself[39m)[38;5;241m.[39mrequest(method, url, body[38;5;241m=[39mbody, headers[38;5;241m=[39mheaders)

File [1;32m~\anaconda3\Lib\http\client.py:1294[0m, in [0;36mHTTPConnection.request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1293[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[1;32m-> 1294[0m [38;5;28mself[39m[38;5;241m.[39m_send_request(method, url, body, headers, encode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1340[0m, in [0;36mHTTPConnection._send_request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1339[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[1;32m-> 1340[0m [38;5;28mself[39m[38;5;241m.[39mendheaders(body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1289[0m, in [0;36mHTTPConnection.endheaders[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1288[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[1;32m-> 1289[0m [38;5;28mself[39m[38;5;241m.[39m_send_output(message_body, encode_chunked[38;5;241m=[39mencode_chunked)

File [1;32m~\anaconda3\Lib\http\client.py:1048[0m, in [0;36mHTTPConnection._send_output[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1047[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[1;32m-> 1048[0m [38;5;28mself[39m[38;5;241m.[39msend(msg)
[0;32m   1050[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1051[0m 
[0;32m   1052[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [1;32m~\anaconda3\Lib\http\client.py:986[0m, in [0;36mHTTPConnection.send[1;34m(self, data)[0m
[0;32m    985[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[1;32m--> 986[0m     [38;5;28mself[39m[38;5;241m.[39mconnect()
[0;32m    987[0m [38;5;28;01melse[39;00m:

File [1;32m~\anaconda3\Lib\site-packages\urllib3\connection.py:205[0m, in [0;36mHTTPConnection.connect[1;34m(self)[0m
[0;32m    204[0m [38;5;28;01mdef[39;00m [38;5;21mconnect[39m([38;5;28mself[39m):
[1;32m--> 205[0m     conn [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_new_conn()
[0;32m    206[0m     [38;5;28mself[39m[38;5;241m.[39m_prepare_conn(conn)

File [1;32m~\anaconda3\Lib\site-packages\urllib3\connection.py:186[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    185[0m [38;5;28;01mexcept[39;00m SocketError [38;5;28;01mas[39;00m e:
[1;32m--> 186[0m     [38;5;28;01mraise[39;00m NewConnectionError(
[0;32m    187[0m         [38;5;28mself[39m, [38;5;124m"[39m[38;5;124mFailed to establish a new connection: [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m e
[0;32m    188[0m     )
[0;32m    190[0m [38;5;28;01mreturn[39;00m conn

[1;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x0000026E1516C510>: Failed to establish a new connection: [WinError 10049] The requested address is not valid in its context

During handling of the above exception, another exception occurred:

[1;31mMaxRetryError[0m                             Traceback (most recent call last)
File [1;32m~\anaconda3\Lib\site-packages\requests\adapters.py:486[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    485[0m [38;5;28;01mtry[39;00m:
[1;32m--> 486[0m     resp [38;5;241m=[39m conn[38;5;241m.[39murlopen(
[0;32m    487[0m         method[38;5;241m=[39mrequest[38;5;241m.[39mmethod,
[0;32m    488[0m         url[38;5;241m=[39murl,
[0;32m    489[0m         body[38;5;241m=[39mrequest[38;5;241m.[39mbody,
[0;32m    490[0m         headers[38;5;241m=[39mrequest[38;5;241m.[39mheaders,
[0;32m    491[0m         redirect[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    492[0m         assert_same_host[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    493[0m         preload_content[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    494[0m         decode_content[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    495[0m         retries[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mmax_retries,
[0;32m    496[0m         timeout[38;5;241m=[39mtimeout,
[0;32m    497[0m         chunked[38;5;241m=[39mchunked,
[0;32m    498[0m     )
[0;32m    500[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [1;32m~\anaconda3\Lib\site-packages\urllib3\connectionpool.py:801[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    799[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[1;32m--> 801[0m retries [38;5;241m=[39m retries[38;5;241m.[39mincrement(
[0;32m    802[0m     method, url, error[38;5;241m=[39me, _pool[38;5;241m=[39m[38;5;28mself[39m, _stacktrace[38;5;241m=[39msys[38;5;241m.[39mexc_info()[[38;5;241m2[39m]
[0;32m    803[0m )
[0;32m    804[0m retries[38;5;241m.[39msleep()

File [1;32m~\anaconda3\Lib\site-packages\urllib3\util\retry.py:594[0m, in [0;36mRetry.increment[1;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[0;32m    593[0m [38;5;28;01mif[39;00m new_retry[38;5;241m.[39mis_exhausted():
[1;32m--> 594[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, error [38;5;129;01mor[39;00m ResponseError(cause))
[0;32m    596[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[1;31mMaxRetryError[0m: HTTPConnectionPool(host='0.0.0.0', port=8051): Max retries exceeded with url: /_alive_ef398006-09d1-429c-9803-f1ac8cde0827 (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000026E1516C510>: Failed to establish a new connection: [WinError 10049] The requested address is not valid in its context'))

During handling of the above exception, another exception occurred:

[1;31mConnectionError[0m                           Traceback (most recent call last)
Cell [1;32mIn[4], line 42[0m
[0;32m     38[0m     fig[38;5;241m.[39mupdate_layout(height[38;5;241m=[39m[38;5;241m300[39m [38;5;241m*[39m [38;5;28mlen[39m(selected_series), showlegend[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m     39[0m     [38;5;28;01mreturn[39;00m fig
[1;32m---> 42[0m app[38;5;241m.[39mrun(host[38;5;241m=[39m[38;5;124m'[39m[38;5;124m0.0.0.0[39m[38;5;124m'[39m, port[38;5;241m=[39m[38;5;241m8051[39m)

File [1;32m~\anaconda3\Lib\site-packages\dash\dash.py:2150[0m, in [0;36mDash.run[1;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)[0m
[0;32m   2147[0m             extra_files[38;5;241m.[39mappend(path)
[0;32m   2149[0m [38;5;28;01mif[39;00m jupyter_dash[38;5;241m.[39mactive:
[1;32m-> 2150[0m     jupyter_dash[38;5;241m.[39mrun_app(
[0;32m   2151[0m         [38;5;28mself[39m,
[0;32m   2152[0m         mode[38;5;241m=[39mjupyter_mode,
[0;32m   2153[0m         width[38;5;241m=[39mjupyter_width,
[0;32m   2154[0m         height[38;5;241m=[39mjupyter_height,
[0;32m   2155[0m         host[38;5;241m=[39mhost,
[0;32m   2156[0m         port[38;5;241m=[39mport,
[0;32m   2157[0m         server_url[38;5;241m=[39mjupyter_server_url,
[0;32m   2158[0m     )
[0;32m   2159[0m [38;5;28;01melse[39;00m:
[0;32m   2160[0m     [38;5;28mself[39m[38;5;241m.[39mserver[38;5;241m.[39mrun(host[38;5;241m=[39mhost, port[38;5;241m=[39mport, debug[38;5;241m=[39mdebug, [38;5;241m*[39m[38;5;241m*[39mflask_run_options)

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:404[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    402[0m     display(HTML(msg))
[0;32m    403[0m [38;5;28;01melse[39;00m:
[1;32m--> 404[0m     [38;5;28;01mraise[39;00m final_error

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:391[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    388[0m         [38;5;28;01mraise[39;00m err
[0;32m    390[0m [38;5;28;01mtry[39;00m:
[1;32m--> 391[0m     wait_for_app()
[0;32m    393[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39min_colab:
[0;32m    394[0m         JupyterDash[38;5;241m.[39m_display_in_colab(dashboard_url, port, mode, width, height)

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:56[0m, in [0;36mretry.<locals>.wrap.<locals>.wrapped_f[1;34m(*args, **kw)[0m
[0;32m     54[0m [38;5;129m@six[39m[38;5;241m.[39mwraps(f)
[0;32m     55[0m [38;5;28;01mdef[39;00m [38;5;21mwrapped_f[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkw):
[1;32m---> 56[0m     [38;5;28;01mreturn[39;00m Retrying([38;5;241m*[39mdargs, [38;5;241m*[39m[38;5;241m*[39mdkw)[38;5;241m.[39mcall(f, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkw)

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:266[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    263[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mstop(attempt_number, delay_since_first_attempt_ms):
[0;32m    264[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_wrap_exception [38;5;129;01mand[39;00m attempt[38;5;241m.[39mhas_exception:
[0;32m    265[0m         [38;5;66;03m# get() on an attempt with an exception should cause it to be raised, but raise just in case[39;00m
[1;32m--> 266[0m         [38;5;28;01mraise[39;00m attempt[38;5;241m.[39mget()
[0;32m    267[0m     [38;5;28;01melse[39;00m:
[0;32m    268[0m         [38;5;28;01mraise[39;00m RetryError(attempt)

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:301[0m, in [0;36mAttempt.get[1;34m(self, wrap_exception)[0m
[0;32m    299[0m         [38;5;28;01mraise[39;00m RetryError([38;5;28mself[39m)
[0;32m    300[0m     [38;5;28;01melse[39;00m:
[1;32m--> 301[0m         six[38;5;241m.[39mreraise([38;5;28mself[39m[38;5;241m.[39mvalue[[38;5;241m0[39m], [38;5;28mself[39m[38;5;241m.[39mvalue[[38;5;241m1[39m], [38;5;28mself[39m[38;5;241m.[39mvalue[[38;5;241m2[39m])
[0;32m    302[0m [38;5;28;01melse[39;00m:
[0;32m    303[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mvalue

File [1;32m~\anaconda3\Lib\site-packages\six.py:719[0m, in [0;36mreraise[1;34m(tp, value, tb)[0m
[0;32m    717[0m     [38;5;28;01mif[39;00m value[38;5;241m.[39m__traceback__ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m tb:
[0;32m    718[0m         [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m--> 719[0m     [38;5;28;01mraise[39;00m value
[0;32m    720[0m [38;5;28;01mfinally[39;00m:
[0;32m    721[0m     value [38;5;241m=[39m [38;5;28;01mNone[39;00m

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:251[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    248[0m     [38;5;28mself[39m[38;5;241m.[39m_before_attempts(attempt_number)
[0;32m    250[0m [38;5;28;01mtry[39;00m:
[1;32m--> 251[0m     attempt [38;5;241m=[39m Attempt(fn([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs), attempt_number, [38;5;28;01mFalse[39;00m)
[0;32m    252[0m [38;5;28;01mexcept[39;00m:
[0;32m    253[0m     tb [38;5;241m=[39m sys[38;5;241m.[39mexc_info()

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:388[0m, in [0;36mJupyterDash.run_app.<locals>.wait_for_app[1;34m()[0m
[0;32m    386[0m [38;5;28;01mexcept[39;00m requests[38;5;241m.[39mConnectionError [38;5;28;01mas[39;00m err:
[0;32m    387[0m     _get_error()
[1;32m--> 388[0m     [38;5;28;01mraise[39;00m err

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:375[0m, in [0;36mJupyterDash.run_app.<locals>.wait_for_app[1;34m()[0m
[0;32m    373[0m _get_error()
[0;32m    374[0m [38;5;28;01mtry[39;00m:
[1;32m--> 375[0m     req [38;5;241m=[39m requests[38;5;241m.[39mget(alive_url)
[0;32m    376[0m     res [38;5;241m=[39m req[38;5;241m.[39mcontent[38;5;241m.[39mdecode()
[0;32m    377[0m     [38;5;28;01mif[39;00m req[38;5;241m.[39mstatus_code [38;5;241m!=[39m [38;5;241m200[39m:

File [1;32m~\anaconda3\Lib\site-packages\requests\api.py:73[0m, in [0;36mget[1;34m(url, params, **kwargs)[0m
[0;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[0;32m     64[0m 
[0;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[1;32m   (...)[0m
[0;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[0;32m     71[0m [38;5;124;03m    """[39;00m
[1;32m---> 73[0m     [38;5;28;01mreturn[39;00m request([38;5;124m"[39m[38;5;124mget[39m[38;5;124m"[39m, url, params[38;5;241m=[39mparams, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\anaconda3\Lib\site-packages\requests\api.py:59[0m, in [0;36mrequest[1;34m(method, url, **kwargs)[0m
[0;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[0;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[0;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[0;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[1;32m---> 59[0m     [38;5;28;01mreturn[39;00m session[38;5;241m.[39mrequest(method[38;5;241m=[39mmethod, url[38;5;241m=[39murl, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\anaconda3\Lib\site-packages\requests\sessions.py:589[0m, in [0;36mSession.request[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[0;32m    584[0m send_kwargs [38;5;241m=[39m {
[0;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[0;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[0;32m    587[0m }
[0;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[1;32m--> 589[0m resp [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msend(prep, [38;5;241m*[39m[38;5;241m*[39msend_kwargs)
[0;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [1;32m~\anaconda3\Lib\site-packages\requests\sessions.py:703[0m, in [0;36mSession.send[1;34m(self, request, **kwargs)[0m
[0;32m    700[0m start [38;5;241m=[39m preferred_clock()
[0;32m    702[0m [38;5;66;03m# Send the request[39;00m
[1;32m--> 703[0m r [38;5;241m=[39m adapter[38;5;241m.[39msend(request, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[0;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [1;32m~\anaconda3\Lib\site-packages\requests\adapters.py:519[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    515[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[0;32m    516[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[0;32m    517[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[1;32m--> 519[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[0;32m    521[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[0;32m    522[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)

[1;31mConnectionError[0m: HTTPConnectionPool(host='0.0.0.0', port=8051): Max retries exceeded with url: /_alive_ef398006-09d1-429c-9803-f1ac8cde0827 (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000026E1516C510>: Failed to establish a new connection: [WinError 10049] The requested address is not valid in its context'))

